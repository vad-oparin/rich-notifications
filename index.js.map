{"version":3,"sources":["../../../src/@ionic-native/plugins/rich-notifications/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;GAWG;AACH,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;;;GAoBG;AASH,IAAa,iBAAiB;IAAS,qCAAiB;IAAxD;;IAuBA,CAAC;IArBC;;;;OAIG;IAEH,4CAAgB,GAAhB,UAAiB,IAAU,EAAE,IAAY;QACvC,MAAM,CAAC,CAAC,yDAAyD;IACnE,CAAC;IAGD,4CAAgB,GAAhB,UAAiB,IAAY;QAC3B,MAAM,CAAC,CAAC,yDAAyD;IACnE,CAAC;IAQH,wBAAC;AAAD,CAvBA,AAuBC,CAvBsC,iBAAiB,GAuBvD;AANM,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAdA;IADC,OAAO,EAAE;;qCACa,IAAI;;yDAE1B;AAGD;IADC,OAAO,EAAE;;;;yDAGT;AAfU,iBAAiB;IAR7B,MAAM,CAAC;QACN,UAAU,EAAE,mBAAmB;QAC/B,MAAM,EAAE,mCAAmC;QAC3C,SAAS,EAAE,gCAAgC;QAC3C,IAAI,EAAE,iFAAiF;QACvF,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,iBAAiB,CAuB7B;SAvBY,iBAAiB","file":"index.js","sourceRoot":"","sourcesContent":["/**\n * This is a template for new plugin wrappers\n *\n * TODO:\n * - Add/Change information below\n * - Document usage (importing, executing main functionality)\n * - Remove any imports that you are not using\n * - Add this file to /src/index.ts (follow style of other plugins)\n * - Remove all the comments included in this template, EXCEPT the @Plugin wrapper docs and any other docs you added\n * - Remove this note\n *\n */\nimport { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @name Rich Notifications\n * @description\n * This plugin does something\n *\n * @usage\n * ```typescript\n * import { RichNotifications } from '@ionic-native/rich-notifications';\n *\n *\n * constructor(private richNotifications: RichNotifications) { }\n *\n * ...\n *\n *\n * this.richNotifications.functionName('Hello', 123)\n *   .then((res: any) => console.log(res))\n *   .catch((error: any) => console.error(error));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'RichNotifications',\n  plugin: 'cordova-plugin-rich-notifications',\n  pluginRef: 'CordovaPluginRichNotifications',\n  repo: 'https://vinnie777@bitbucket.org/vinnie777/cordova-plugin-rich-notifications.git', // the github repository URL for the plugin\n  platforms: ['Android', 'iOS']\n})\n\nexport class RichNotifications extends IonicNativePlugin {\n\n  /**\n   * This function does something\n   * @param arg1 {string} Some param to configure something\n   * @return {Promise<any>} Returns a promise that resolves when something happens\n   */\n  @Cordova()\n  testNotification(arg1: Date, arg2: string): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  sendNotification(arg1: string): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}